% Data for weights and 3-point percentage
weights = [
    265, 255, 198, 237, 230, 242, 232, 200, 250, 234, 221, 225, 190, 229, 200, 207, 
    195, 225, 185, 233, 205, 216, 210, 200, 248, 210, 229, 220, 215, 202, 220, 232, 
    190, 248, 205, 214, 232, 205, 240, 255, 196, 186, 194, 235, 235, 175, 209, 225, 
    215, 235, 185, 190, 220, 230, 249, 240, 220, 250, 234, 225, 250, 210, 218, 205, 
    220, 252, 196, 183, 250, 190, 185, 220, 250, 245, 210, 175, 170, 220, 190, 225, 
    250, 240, 250, 220, 245, 250, 240, 243, 260, 290, 240, 240, 240, 250, 240, 245, 
    275, 290, 245, 225, 240, 240, 250, 275, 245, 240, 250, 235, 270, 265, 235, 250, 
    240, 230, 255, 275, 270, 265, 240, 250, 255, 240, 275, 275, 270, 275, 270, 260, 
    290, 260, 275, 260, 240, 250, 270, 235, 240, 235, 245, 235, 250, 235, 275, 260, 
    245, 275, 270, 255, 245, 235, 225, 240, 240, 265, 250, 250, 245, 240, 255, 240, 
    235, 245, 250, 250, 270, 250, 255, 260, 265, 270, 250, 270, 275, 270, 275, 280
];
three_pt_percent = [
    0.0, 11.8, 37.9, 12.5, 36.5, 33.7, 43.1, 41.9, 36.4, 40.0, 44.3, 32.1, 45.0, 
    34.2, 36.7, 37.1, 33.9, 53.4, 29.7, 66.7, 37.6, 44.1, 38.3, 34.5, 0.0, 37.7, 
    43.7, 28.9, 37.9, 38.5, 31.2, 0.0, 41.9, 48.2, 44.0, 40.0, 36.7, 43.9, 0.0, 
    30.7, 39.8, 33.0, 37.2, 32.8, 40.5, 40.1, 33.7, 43.4, 35.2, 42.9, 38.3, 42.1, 
    20.6, 25.0, 32.3, 25.0, 13.0, 18.0, 38.8, 39.4, 36.2, 100.0, 33.3, 36.2, 0.0, 
    42.1, 37.6, 32.7, 31.6, 32.5, 33.3, 25.7, 33.7, 26.6, 19.4, 23.9, 35.4, 26.9, 
    34.7, 0.0, 30.6, 34.7, 35.8, 34.3, 42.4, 28.2, 37.8, 39.4, 28.8, 39.3, 40.5, 
    0.0, 44.4, 31.3, 29.4, 45.0, 25.8, 38.8, 30.0, 32.4, 24.7, 12.5, 41.7, 44.8, 
    36.2, 35.0, 21.6, 88.9, 39.2, 37.4, 53.3, 0.0, 39.8, 44.2, 43.5, 33.3, 36.1, 
    0.0, 44.1, 41.2, 60.9, 33.6, 43.2, 47.1, 47.1, 38.3, 31.8, 46.3, 21.1, 28.4, 
    36.6, 43.9, 0.0, 44.6, 50.0, 43.4, 42.8, 0.0, 41.9, 60.0, 31.2, 32.2, 33.6, 
    0.0, 36.4, 37.8, 41.9, 46.9, 0.0, 46.6, 38.9, 29.7, 28.7, 41.7, 38.2, 36.1, 
    35.8, 37.1, 33.3, 32.5, 38.3, 44.3, 38.9, 40.6, 29.2, 37.5, 50.0, 22.7, 38.3, 
    39.4, 33.3, 35.5, 46.2, 40.1, 34.3, 40.2, 20.5, 43.3, 50.0, 33.7, 44.9, 0.0, 
    34.0, 40.8, 33.6, 28.9, 36.6, 37.7, 38.3, 33.3, 34.9, 31.2, 25.2, 38.5, 30.4, 
    38.0, 33.9, 41.1, 35.6, 31.4, 33.4, 34.5, 21.6, 14.3, 31.1, 31.4, 45.7, 12.5, 
    41.0, 34.8, 37.4, 38.2, 44.1, 19.4, 32.3, 20.0, 41.0, 31.2, 35.9, 20.5, 26.1, 
    29.1, 54.3, 37.0, 40.9, 39.2, 0.0, 35.4, 27.5, 39.9, 34.2, 17.1, 33.2, 0.0, 
    0.0, 26.4, 36.9, 39.8
];

% Scatter plot
figure;
scatter(weights, three_pt_percent, 'filled');
xlabel('Weight (pounds)');
ylabel('3-Point Percentage');
title('3-Point Percentage vs Weight of NBA Players');
grid on;
hold on;

% Fit data to a power law model (y = a * x^b)
% We use log transformation for linearization
log_weights = log(weights);
log_three_pt_percent = log(three_pt_percent + eps); % Add eps to avoid log(0)

% Linear fit in log-log space
p = polyfit(log_weights, log_three_pt_percent, 1);
a = exp(p(2)); % Convert intercept back
b = p(1);      % Slope is the power

% Generate fitted curve
fit_weights = linspace(min(weights), max(weights), 100);
fit_three_pt_percent = a * fit_weights.^b;

% Plot fitted curve
plot(fit_weights, fit_three_pt_percent, 'r-', 'LineWidth', 1.5);
legend('Data', sprintf('Fit: y =